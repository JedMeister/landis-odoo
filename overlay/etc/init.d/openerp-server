#!/bin/sh

### BEGIN INIT INFO
# Provides:		openerp-server
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs $syslog
# Should-Start:		$network
# Should-Stop:		$network
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Enterprise Resource Management software
# Description:		Open ERP is a complete ERP and CRM software.
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin
NAME=openerp-server
DESC=openerp-server
DAEMON=/opt/odoo/openerp-server
CONFIG=/etc/odoo/${NAME}.conf
LOGFILE=/var/log/${NAME}.log
PIDFILE=/var/run/${NAME}.pid
USER=odoo

test -x ${DAEMON} || exit 0

set -e

start () {
  if [ -f "$PIDFILE" ] && ps -p $(cat $PIDFILE) >/dev/null; then
    echo "Service $NAME already running" >&2
    return 1
  fi
  echo 'Starting service...' >&2
  start-stop-daemon -S -m -b -p $PIDFILE -c $USER --startas $DAEMON -- --config=$CONFIG --logfile=$LOGFILE
  echo "Service $NAME started" >&2
}

stop () {
  if [ ! -f "$PIDFILE" ] || ! ps -p $(cat $PIDFILE) >/dev/null; then
    echo "Service $NAME not running" >&2
    return 1
  fi
  echo 'Stopping service...' >&2
  start-stop-daemon -K -p $PIDFILE
  echo "Service $NAME stopped" >&2
}

status () {
  if [ -f $PIDFILE ]; then
    if ps -p $(cat $PIDFILE) -u $USER > dev/null; then
      echo "Service $NAME running" >&2
      return 0
    fi
    echo "Service $NAME not running (or orphaned)" >&2
    return 1
  fi
}

case "${1}" in
	start)
		start
		;;

	stop)
		stop
		;;

	restart|force-reload)
		stop
        sleep 1
        start
		;;
    
    status)
        status
        ;;

	*)
		N=/etc/init.d/${NAME}
		echo "Usage: ${NAME} {start|stop|restart|force-reload|status}" >&2
		exit 1
		;;
esac

exit 0
